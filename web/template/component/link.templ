package component

import (
	"github.com/qxuken/short/internal/utils"
	"github.com/qxuken/short/internal/db"
)

templ RedirectUrlInput(err string) {
	<div class="input-container" hx-target="this" hx-swap="outerHTML">
		<input
			id="redirect_url"
			name="redirect_url"
			type="text"
			placeholder="Past your long link here"
			hx-post="/f/redirect_url"
			hx-preserve
		/>
		if err != "" {
			<div class="input-error">
				@CrossIcon(22)
				<span>{ err }</span>
			</div>
		}
	</div>
}

templ ShortUrlInput(err string) {
	<div class="input-container" hx-target="this" hx-swap="outerHTML">
		<input type="hidden" name="short_type" value="custom"/>
		<input
			id="short_url"
			name="short_url"
			type="text"
			placeholder="Enter handle for short url"
			hx-post="/f/short_url"
			hx-preserve
		/>
		if err != "" {
			<div class="input-error">
				@CrossIcon(22)
				<span>{ err }</span>
			</div>
		}
	</div>
}

templ LinkFormActions(shortType string) {
	<div class="form-actions">
		<button class="button button-submit" type="submit">SHORT IT</button>
		<span class="form-actions-separator">OR</span>
		if shortType == "custom" {
			<button class="button" hx-post="/f/generated" hx-target="#create-link">RETURN TO AUTO GENERATED</button>
		} else {
			<button class="button" hx-post="/f/custom" hx-target="#create-link">USE CUSTOM SHORT</button>
		}
	</div>
}

templ CreateLink(baseUrl, shortType, urlErr, shortErr string) {
	<form id="create-link" class="shortiq-form" hx-post="/" hx-swap="outerHTML">
		@RedirectUrlInput(urlErr)
		if shortType == "custom" {
			@ShortUrlInput(shortErr)
		}
		@LinkFormActions(shortType)
	</form>
}

script Copy(url templ.SafeURL) {
	navigator.permissions.query({ name: "clipboard-write" }).then((result) => {
		if (result.state === "granted" || result.state === "prompt") {
			navigator.clipboard.writeText(url)
		}
	})
}

templ LinkStats(short templ.SafeURL, data []db.AnalyticsItem, notification string) {
	<div hx-target="this" hx-swap="outerHTML">
		if notification != "" {
			<h2>{ notification }</h2>
		}
		<div>
			<a href={ short } target="_blank">{ string(short) }</a>
			<button class="icon-button" onclick={ Copy(short) }>
				@CopyIcon(40)
			</button>
		</div>
		<div><a href="/">Create another</a></div>
		<ul>
			if len(data) > 0 {
				for _, v := range data {
					<li>{ v.Country }, { v.Referer }, { utils.DateFormat("", v.Ts) }</li>
				}
			} else {
				<h5>No redirects yet</h5>
			}
		</ul>
	</div>
}
